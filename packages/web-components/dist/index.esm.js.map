{"version":3,"file":"index.esm.js","sources":["../src/panels.js","../src/menu.js","../src/tree.js","../src/index.js"],"sourcesContent":["import React from 'react';\nimport { IoCloseSharp } from 'react-icons/io5';\n\nimport styles from '../styles/panels.module.css';\n\nfunction PanelHeader ({\n  label = 'Panel',\n  onClose = () => {},\n  sticky = false,\n}) {\n  return (\n    <div className={styles.panelHeader}>\n      {!sticky ? (\n        <span>\n          <a onClick={onClose}><IoCloseSharp/></a>\n        </span>\n      ) : ''}\n      {label}\n    </div>\n  )\n}\n\nfunction PanelContent ({ children, noscroll }) {\n  return (\n    <div className={styles.panelContent} style={{\n      overflowY: noscroll ? 'hidden' : 'auto',\n    }}>\n      {children}\n    </div>\n  )\n}\n\nexport function Panel ({\n  label = 'Panel',\n  children = null,\n  onClose = null,\n  flex = 'none',\n  width = 'auto',\n  height = 'auto',\n  transparent = false,\n  sticky = false,\n  noscroll = false,\n}) {\n\n  return (\n    <div\n      style={{ flex, width, height }}\n      className={[\n        styles.panel,\n        transparent ? styles.panelIsTransparent : '',\n      ].join(' ')}\n    >\n      <PanelHeader label={label} onClose={onClose} sticky={sticky} />\n      <PanelContent children={children} noscroll={noscroll} />\n    </div>\n  )\n}\n\nexport function Panels ({\n  children = null,\n  horizontal = false,\n  vertical = false,\n  flex = 'none',\n  width = 'auto',\n  height = 'auto',\n}) {\n  return (\n    <div\n      style={{ flex, width, height }}\n      className={[\n        styles.panels,\n        horizontal ? styles.panelsAreHorizontal : '',\n        vertical ? styles.panelsAreVertical : '',\n      ].join(' ')}\n    >\n      {children}\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { IoChevronDownSharp } from 'react-icons/io5';\nimport styles from '../styles/menu.module.css';\n\nfunction MenuItemDropdown({\n  children = null,\n  active = false,\n}) {\n  return (\n    <div className={[\n      styles.dropdown,\n      active ? styles.dropdownIsActive : '',\n    ].join(' ')}>\n      {children}\n    </div>\n  )\n}\n\nexport function MenuDropdownItem({\n  label = null,\n  href = null,\n  tooltip = null,\n  icon = null,\n  disabled = false,\n  onClick = () => (true),\n}) {\n  return (\n    <div className={[\n      styles.dropdownItem,\n      disabled ? styles.dropdownItemIsDisabled : '',\n    ].join(' ')}>\n      <a href={href} onClick={onClick} title={tooltip} target={href ? '_blank' : ''}>\n        <span>\n          {icon ? icon() : ''}\n        </span>\n        <span>\n          {label}\n        </span>\n      </a>\n    </div>\n  )\n}\n\nexport function MenuDropdownDivider({\n}) {\n  return (\n    <div className={styles.dropdownDivider} />\n  )\n}\n\nexport function MenuDropdownMask({\n  active = false,\n  onClick = () => {},\n}) {\n  return (\n    <div \n      className={[\n        styles.dropdownMask,\n        active ? styles.dropdownMaskIsActive : ''\n      ].join(' ')}\n      onClick={onClick}\n    />\n  )\n}\n\nexport function MenuDropdownHeader({\n  label = null\n}) {\n  return (\n    <div className={styles.dropdownHeader}>\n      {label}\n    </div>\n  )\n}\n\nexport function MenuItem({\n  href = null,\n  label = null,\n  tooltip = null,\n  children = null,\n  dropdown = null,\n  active = false,\n  onClick = () => (true),\n}) {\n  return (\n    <div onClick={onClick} className={[\n      styles.item,\n    ].join(' ')}>\n      {children ? children : (\n        <a title={tooltip}>\n          {label}\n          <IoChevronDownSharp />\n        </a>\n      )}\n      {(dropdown) ? (\n        <MenuItemDropdown active={active}>\n          {dropdown()}\n        </MenuItemDropdown>\n      ) : ''}\n    </div>\n  )\n}\n\nexport function Menu({\n  children = null,\n  items = [],\n}) {\n  const [ active, setActive ] = useState(null);\n\n  return (\n    <div className={[\n      styles.menu,\n    ].join(' ')}>\n      {items.map((item) => (\n        <MenuItem\n          key={item.label}\n          label={item.label}\n          dropdown={() => {\n            return item.dropdown({ controller });\n          }}\n          active={active === item.label}\n          onClick={() => {\n            setActive(active === item.label ? null : item.label)\n          }}\n        />\n      ))}\n      <div \n        onClick={() => (setActive(null))}\n        style={{ flex: 1 }} \n      />\n      {children}\n      <MenuDropdownMask \n        onClick={() => (setActive(null)) }\n        active={!!active} \n      />\n    </div>\n  )\n}","import React, { useState } from 'react';\nimport { IoChevronDownSharp, IoChevronForwardSharp } from 'react-icons/io5';\n\nimport styles from '../styles/tree.module.css';\n\nexport function TreeItem({\n  label = 'Item',\n  icon = () => {},\n  onClick = () => {},\n  actions = () => {}\n}) {\n  return (\n    <div className={styles.treeItem} onClick={onClick}>\n      <span className={styles.treeItemIcon}>\n        {icon()}\n      </span>\n      <span className={styles.treeItemLabel}>\n        {label}\n      </span>\n      <span className={styles.treeItemActions}>\n        {actions()}\n      </span>\n    </div>\n  )\n}\n\nexport function TreeGroupItems({\n  children = null\n}) {\n  return (\n    <div className={styles.treeGroupItems}>\n      {children}\n    </div>\n  )\n}\n\nexport function TreeGroup({\n  label = 'Group',\n  children = null,\n}) {\n  const [ open, setOpen ] = useState(false);\n\n  return (\n    <div className={[\n      styles.treeGroup,\n      open ? styles.treeGroupIsOpen : '',\n    ].join(' ')}>\n      <TreeItem\n        onClick={() => (setOpen(!open))}\n        icon={open ? IoChevronDownSharp : IoChevronForwardSharp}\n        label={label}\n      />\n      <TreeGroupItems>\n        {children}\n      </TreeGroupItems>\n    </div>\n  )\n}\n\nexport function Tree({\n  children = null\n}) {\n  return (\n    <div className={styles.tree}>\n      {children}\n    </div>\n  )\n}","\"use strict\";\n\nimport {\n  Panels,\n  Panel\n } from \"./panels\";\n\nimport {\n  Menu,\n  MenuItem,\n  MenuDropdownHeader,\n  MenuDropdownDivider,\n  MenuDropdownItem,\n  MenuDropdownMask,\n} from './menu';\n\nimport {\n  Tree,\n  TreeGroup,\n  TreeGroupItems,\n  TreeItem,\n} from './tree';\n\nmodule.exports = {\n  Panels,\n  Panel,\n  Menu,\n  MenuItem,\n  MenuDropdownHeader,\n  MenuDropdownDivider,\n  MenuDropdownItem,\n  MenuDropdownMask,\n  Tree,\n  TreeGroup,\n  TreeGroupItems,\n  TreeItem,\n};"],"names":["PanelHeader","label","onClose","sticky","React","className","styles","panelHeader","onClick","IoCloseSharp","PanelContent","panelContent","style","overflowY","noscroll","children","MenuItemDropdown","active","dropdown","dropdownIsActive","join","MenuDropdownMask","dropdownMask","dropdownMaskIsActive","MenuItem","tooltip","item","title","IoChevronDownSharp","TreeItem","icon","actions","treeItem","treeItemIcon","treeItemLabel","treeItemActions","TreeGroupItems","treeGroupItems","module","exports","Panels","horizontal","vertical","flex","width","height","panels","panelsAreHorizontal","panelsAreVertical","Panel","transparent","panel","panelIsTransparent","Menu","items","useState","setActive","menu","map","key","controller","MenuDropdownHeader","dropdownHeader","MenuDropdownDivider","dropdownDivider","MenuDropdownItem","href","disabled","dropdownItem","dropdownItemIsDisabled","target","Tree","tree","TreeGroup","open","setOpen","treeGroup","treeGroupIsOpen","IoChevronForwardSharp"],"mappings":"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"}